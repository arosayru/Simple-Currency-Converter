{"ast":null,"code":"var _jsxFileName = \"E:\\\\Dev\\\\Assignment\\\\Simple-Currency-Converter\\\\frontend\\\\src\\\\components\\\\ExchangeRateChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst API_KEY = process.env.REACT_APP_EXCHANGE_RATE_API_KEY; // Get API Key from .env\n\nconst ExchangeRateChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [\"Loading...\"],\n    datasets: [{\n      label: \"Exchange Rate (USD to LKR)\",\n      data: [0],\n      borderColor: \"green\",\n      backgroundColor: \"rgba(0, 255, 0, 0.2)\",\n      fill: true\n    }]\n  });\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        if (!API_KEY) {\n          console.error(\"API Key is missing!\");\n          return;\n        }\n        const response = await axios.get(`https://v6.exchangerate-api.com/v6/${API_KEY}/latest/USD`);\n        const rates = response.data.conversion_rates;\n        if (!rates[\"LKR\"]) {\n          console.error(\"LKR rate not found in response!\");\n          return;\n        }\n        const currentTime = new Date().toLocaleTimeString();\n        setChartData(prevData => ({\n          labels: [...prevData.labels.slice(-9), currentTime],\n          // Keep last 10 timestamps\n          datasets: [{\n            ...prevData.datasets[0],\n            data: [...prevData.datasets[0].data.slice(-9), rates[\"LKR\"]] // Keep last 10 exchange rates\n          }]\n        }));\n      } catch (error) {\n        console.error(\"Error fetching exchange rates:\", error);\n      }\n    };\n    fetchRates(); // Fetch initially\n    const interval = setInterval(fetchRates, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"300px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ExchangeRateChart, \"5F7mIp1B/iM+GIn4os4xI5yL1IA=\");\n_c = ExchangeRateChart;\nexport default ExchangeRateChart;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRateChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","API_KEY","process","env","REACT_APP_EXCHANGE_RATE_API_KEY","ExchangeRateChart","_s","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","fill","fetchRates","console","error","response","get","rates","conversion_rates","currentTime","Date","toLocaleTimeString","prevData","slice","interval","setInterval","clearInterval","style","width","height","children","options","responsive","maintainAspectRatio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/components/ExchangeRateChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport axios from \"axios\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst API_KEY = process.env.REACT_APP_EXCHANGE_RATE_API_KEY; // Get API Key from .env\r\n\r\nconst ExchangeRateChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [\"Loading...\"],\r\n    datasets: [\r\n      {\r\n        label: \"Exchange Rate (USD to LKR)\",\r\n        data: [0],\r\n        borderColor: \"green\",\r\n        backgroundColor: \"rgba(0, 255, 0, 0.2)\",\r\n        fill: true,\r\n      }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      try {\r\n        if (!API_KEY) {\r\n          console.error(\"API Key is missing!\");\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(`https://v6.exchangerate-api.com/v6/${API_KEY}/latest/USD`);\r\n        const rates = response.data.conversion_rates;\r\n        \r\n        if (!rates[\"LKR\"]) {\r\n          console.error(\"LKR rate not found in response!\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = new Date().toLocaleTimeString();\r\n\r\n        setChartData((prevData) => ({\r\n          labels: [...prevData.labels.slice(-9), currentTime], // Keep last 10 timestamps\r\n          datasets: [\r\n            {\r\n              ...prevData.datasets[0],\r\n              data: [...prevData.datasets[0].data.slice(-9), rates[\"LKR\"]], // Keep last 10 exchange rates\r\n            }\r\n          ]\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching exchange rates:\", error);\r\n      }\r\n    };\r\n\r\n    fetchRates(); // Fetch initially\r\n    const interval = setInterval(fetchRates, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"300px\" }}>\r\n      <Line data={chartData} options={{ responsive: true, maintainAspectRatio: false }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExchangeRateChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}