{"ast":null,"code":"var _jsxFileName = \"E:\\\\Dev\\\\Assignment\\\\Simple-Currency-Converter\\\\frontend\\\\src\\\\components\\\\ExchangeRateChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ExchangeRateChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Exchange Rate (USD to LKR)\",\n      data: [],\n      borderColor: \"green\",\n      backgroundColor: \"rgba(0, 255, 0, 0.2)\",\n      fill: true\n    }]\n  });\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        const response = await axios.get(\"https://v6.exchangerate-api.com/v6//latest/USD\");\n        const rates = response.data.conversion_rates;\n        const currentTime = new Date().toLocaleTimeString();\n        setChartData(prevData => ({\n          labels: [...prevData.labels.slice(-9), currentTime],\n          datasets: [{\n            ...prevData.datasets[0],\n            data: [...prevData.datasets[0].data.slice(-9), rates[\"LKR\"]]\n          }]\n        }));\n      } catch (error) {\n        console.error(\"Error fetching exchange rates:\", error);\n      }\n    };\n    fetchRates();\n    const interval = setInterval(fetchRates, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(ExchangeRateChart, \"r22dccBYfKnXW2u6c0M1oK44Eis=\");\n_c = ExchangeRateChart;\nexport default ExchangeRateChart;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRateChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","ExchangeRateChart","_s","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","fill","fetchRates","response","get","rates","conversion_rates","currentTime","Date","toLocaleTimeString","prevData","slice","error","console","interval","setInterval","clearInterval","options","responsive","maintainAspectRatio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/components/ExchangeRateChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport axios from \"axios\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst ExchangeRateChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Exchange Rate (USD to LKR)\",\r\n        data: [],\r\n        borderColor: \"green\",\r\n        backgroundColor: \"rgba(0, 255, 0, 0.2)\",\r\n        fill: true,\r\n      }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://v6.exchangerate-api.com/v6//latest/USD\");\r\n        const rates = response.data.conversion_rates;\r\n        const currentTime = new Date().toLocaleTimeString(); \r\n\r\n        setChartData((prevData) => ({\r\n          labels: [...prevData.labels.slice(-9), currentTime], \r\n          datasets: [\r\n            {\r\n              ...prevData.datasets[0],\r\n              data: [...prevData.datasets[0].data.slice(-9), rates[\"LKR\"]], \r\n            }\r\n          ]\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching exchange rates:\", error);\r\n      }\r\n    };\r\n\r\n    fetchRates(); \r\n    const interval = setInterval(fetchRates, 30000); \r\n\r\n    return () => clearInterval(interval); \r\n  }, []);\r\n\r\n  return <Line data={chartData} options={{ responsive: true, maintainAspectRatio: false }} />;\r\n};\r\n\r\nexport default ExchangeRateChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC1H,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BV,OAAO,CAACW,QAAQ,CAACV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC;IACzCmB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,4BAA4B;MACnCC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,OAAO;MACpBC,eAAe,EAAE,sBAAsB;MACvCC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC,CAAC;EAEF1B,SAAS,CAAC,MAAM;IACd,MAAM2B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,gDAAgD,CAAC;QAClF,MAAMC,KAAK,GAAGF,QAAQ,CAACL,IAAI,CAACQ,gBAAgB;QAC5C,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAEnDf,YAAY,CAAEgB,QAAQ,KAAM;UAC1Bf,MAAM,EAAE,CAAC,GAAGe,QAAQ,CAACf,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEJ,WAAW,CAAC;UACnDX,QAAQ,EAAE,CACR;YACE,GAAGc,QAAQ,CAACd,QAAQ,CAAC,CAAC,CAAC;YACvBE,IAAI,EAAE,CAAC,GAAGY,QAAQ,CAACd,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEN,KAAK,CAAC,KAAK,CAAC;UAC7D,CAAC;QAEL,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDV,UAAU,CAAC,CAAC;IACZ,MAAMY,QAAQ,GAAGC,WAAW,CAACb,UAAU,EAAE,KAAK,CAAC;IAE/C,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOzB,OAAA,CAACZ,IAAI;IAACqB,IAAI,EAAEL,SAAU;IAACwB,OAAO,EAAE;MAAEC,UAAU,EAAE,IAAI;MAAEC,mBAAmB,EAAE;IAAM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7F,CAAC;AAAC/B,EAAA,CA1CID,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AA4CvB,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}