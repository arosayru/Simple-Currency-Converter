{"ast":null,"code":"var _jsxFileName = \"E:\\\\Dev\\\\Assignment\\\\Simple-Currency-Converter\\\\frontend\\\\src\\\\components\\\\CurrencyConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, MenuItem, Button, Typography } from \"@mui/material\";\nimport { convertCurrency, getTransfers, deleteTransfer } from \"../api\";\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  label: \"USA\",\n  code: \"USD\"\n}, {\n  label: \"Sri Lanka\",\n  code: \"LKR\"\n}, {\n  label: \"Australia\",\n  code: \"AUD\"\n}, {\n  label: \"India\",\n  code: \"INR\"\n}];\nconst CurrencyConverter = () => {\n  _s();\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"LKR\");\n  const [amount, setAmount] = useState(\"\");\n  const [convertedAmount, setConvertedAmount] = useState(null);\n  const [transfers, setTransfers] = useState([]);\n  const formatNumber = num => {\n    return parseFloat(num).toFixed(2); // Limits to 2 decimal places\n  };\n  const handleConvert = async () => {\n    if (!amount || isNaN(amount) || amount <= 0) {\n      alert(\"Please enter a valid amount.\");\n      return;\n    }\n    const data = {\n      fromCountry: fromCurrency,\n      toCountry: toCurrency,\n      amount\n    };\n    const result = await convertCurrency(data);\n    setConvertedAmount(formatNumber(result.convertedAmount));\n    loadTransfers();\n  };\n  const loadTransfers = async () => {\n    const data = await getTransfers();\n    setTransfers(data);\n  };\n  const handleDelete = async id => {\n    await deleteTransfer(id);\n    loadTransfers();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"converter-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      className: \"title\",\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"From Currency\",\n      value: fromCurrency,\n      onChange: e => setFromCurrency(e.target.value),\n      fullWidth: true,\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: countries.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: c.code,\n        children: c.label\n      }, c.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"To Currency\",\n      value: toCurrency,\n      onChange: e => setToCurrency(e.target.value),\n      fullWidth: true,\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: countries.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: c.code,\n        children: c.label\n      }, c.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Amount\",\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      fullWidth: true,\n      style: {\n        marginBottom: \"15px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleConvert,\n      className: \"convert-button\",\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), convertedAmount !== null && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: \"result\",\n      children: [\"Converted Amount: \", convertedAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), transfers.map(t => /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"history\",\n      children: [t.amount, \" \", t.fromCountry, \" \\u2192 \", formatNumber(t.convertedAmount), \" \", t.toCountry, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"revoke\",\n        onClick: () => handleDelete(t._id),\n        children: \"REVOKE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"13nGY6oJtWU/w0c5ybDkja0NZXg=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","TextField","MenuItem","Button","Typography","convertCurrency","getTransfers","deleteTransfer","jsxDEV","_jsxDEV","countries","label","code","CurrencyConverter","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","convertedAmount","setConvertedAmount","transfers","setTransfers","formatNumber","num","parseFloat","toFixed","handleConvert","isNaN","alert","data","fromCountry","toCountry","result","loadTransfers","handleDelete","id","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","select","value","onChange","e","target","fullWidth","style","marginBottom","map","c","type","color","onClick","t","_id","_c","$RefreshReg$"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/components/CurrencyConverter.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, MenuItem, Button, Typography } from \"@mui/material\";\r\nimport { convertCurrency, getTransfers, deleteTransfer } from \"../api\";\r\nimport \"../styles/App.css\";\r\n\r\nconst countries = [\r\n  { label: \"USA\", code: \"USD\" },\r\n  { label: \"Sri Lanka\", code: \"LKR\" },\r\n  { label: \"Australia\", code: \"AUD\" },\r\n  { label: \"India\", code: \"INR\" }\r\n];\r\n\r\nconst CurrencyConverter = () => {\r\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\r\n  const [toCurrency, setToCurrency] = useState(\"LKR\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [convertedAmount, setConvertedAmount] = useState(null);\r\n  const [transfers, setTransfers] = useState([]);\r\n\r\n  const formatNumber = (num) => {\r\n    return parseFloat(num).toFixed(2); // Limits to 2 decimal places\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    if (!amount || isNaN(amount) || amount <= 0) {\r\n      alert(\"Please enter a valid amount.\");\r\n      return;\r\n    }\r\n\r\n    const data = { fromCountry: fromCurrency, toCountry: toCurrency, amount };\r\n    const result = await convertCurrency(data);\r\n    setConvertedAmount(formatNumber(result.convertedAmount));\r\n    loadTransfers();\r\n  };\r\n\r\n  const loadTransfers = async () => {\r\n    const data = await getTransfers();\r\n    setTransfers(data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await deleteTransfer(id);\r\n    loadTransfers();\r\n  };\r\n\r\n  return (\r\n    <div className=\"converter-container\">\r\n      <Typography variant=\"h4\" className=\"title\">\r\n        Currency Converter\r\n      </Typography>\r\n\r\n      <TextField\r\n        select\r\n        label=\"From Currency\"\r\n        value={fromCurrency}\r\n        onChange={(e) => setFromCurrency(e.target.value)}\r\n        fullWidth\r\n        style={{ marginBottom: \"15px\" }}\r\n      >\r\n        {countries.map((c) => (\r\n          <MenuItem key={c.code} value={c.code}>\r\n            {c.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <TextField\r\n        select\r\n        label=\"To Currency\"\r\n        value={toCurrency}\r\n        onChange={(e) => setToCurrency(e.target.value)}\r\n        fullWidth\r\n        style={{ marginBottom: \"15px\" }}\r\n      >\r\n        {countries.map((c) => (\r\n          <MenuItem key={c.code} value={c.code}>\r\n            {c.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <TextField\r\n        label=\"Amount\"\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        fullWidth\r\n        style={{ marginBottom: \"15px\" }}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleConvert}\r\n        className=\"convert-button\"\r\n      >\r\n        Convert\r\n      </Button>\r\n\r\n      {convertedAmount !== null && (\r\n        <Typography variant=\"h6\" className=\"result\">\r\n          Converted Amount: {convertedAmount}\r\n        </Typography>\r\n      )}\r\n\r\n      {transfers.map((t) => (\r\n        <Typography key={t._id} className=\"history\">\r\n          {t.amount} {t.fromCountry} â†’ {formatNumber(t.convertedAmount)}{\" \"}\r\n          {t.toCountry}{\" \"}\r\n          <span className=\"revoke\" onClick={() => handleDelete(t._id)}>\r\n            REVOKE\r\n          </span>\r\n        </Typography>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyConverter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}