{"ast":null,"code":"var _jsxFileName = \"E:\\\\Dev\\\\Assignment\\\\Simple-Currency-Converter\\\\frontend\\\\src\\\\components\\\\CurrencyConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, MenuItem, Button, Typography } from \"@mui/material\";\nimport { convertCurrency, getTransfers, deleteTransfer } from \"../api\";\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  label: \"USA\",\n  code: \"USD\"\n}, {\n  label: \"Sri Lanka\",\n  code: \"LKR\"\n}, {\n  label: \"Australia\",\n  code: \"AUD\"\n}, {\n  label: \"India\",\n  code: \"INR\"\n}];\nconst CurrencyConverter = () => {\n  _s();\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"LKR\");\n  const [amount, setAmount] = useState(\"\");\n  const [convertedAmount, setConvertedAmount] = useState(null);\n  const [transfers, setTransfers] = useState([]);\n  const handleConvert = async () => {\n    const data = {\n      fromCountry: fromCurrency,\n      toCountry: toCurrency,\n      amount\n    };\n    const result = await convertCurrency(data);\n    setConvertedAmount(result.convertedAmount);\n    loadTransfers();\n  };\n  const loadTransfers = async () => {\n    const data = await getTransfers();\n    setTransfers(data);\n  };\n  const handleDelete = async id => {\n    await deleteTransfer(id);\n    loadTransfers();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"converter\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"From Currency\",\n      value: fromCurrency,\n      onChange: e => setFromCurrency(e.target.value),\n      fullWidth: true,\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: countries.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: c.code,\n        children: c.label\n      }, c.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"To Currency\",\n      value: toCurrency,\n      onChange: e => setToCurrency(e.target.value),\n      fullWidth: true,\n      className: \"text-field\",\n      children: countries.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: c.code,\n        children: c.label\n      }, c.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Amount\",\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      fullWidth: true,\n      className: \"text-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleConvert,\n      className: \"convert-button\",\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), convertedAmount !== null && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: \"result\",\n      children: [\"Converted Amount: \", convertedAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), transfers.map(t => /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"history\",\n      children: [t.amount, \" \", t.fromCountry, \" \\u2192 \", t.convertedAmount, \" \", t.toCountry, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"revoke\",\n        onClick: () => handleDelete(t._id),\n        children: \"REVOKE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"13nGY6oJtWU/w0c5ybDkja0NZXg=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","TextField","MenuItem","Button","Typography","convertCurrency","getTransfers","deleteTransfer","jsxDEV","_jsxDEV","countries","label","code","CurrencyConverter","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","convertedAmount","setConvertedAmount","transfers","setTransfers","handleConvert","data","fromCountry","toCountry","result","loadTransfers","handleDelete","id","className","children","select","value","onChange","e","target","fullWidth","style","marginBottom","map","c","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","color","onClick","t","_id","_c","$RefreshReg$"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/components/CurrencyConverter.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, MenuItem, Button, Typography } from \"@mui/material\";\r\nimport { convertCurrency, getTransfers, deleteTransfer } from \"../api\";\r\nimport \"../styles/App.css\";\r\n\r\nconst countries = [\r\n  { label: \"USA\", code: \"USD\" },\r\n  { label: \"Sri Lanka\", code: \"LKR\" },\r\n  { label: \"Australia\", code: \"AUD\" },\r\n  { label: \"India\", code: \"INR\" }\r\n];\r\n\r\nconst CurrencyConverter = () => {\r\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\r\n  const [toCurrency, setToCurrency] = useState(\"LKR\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [convertedAmount, setConvertedAmount] = useState(null);\r\n  const [transfers, setTransfers] = useState([]);\r\n\r\n  const handleConvert = async () => {\r\n    const data = { fromCountry: fromCurrency, toCountry: toCurrency, amount };\r\n    const result = await convertCurrency(data);\r\n    setConvertedAmount(result.convertedAmount);\r\n    loadTransfers();\r\n  };\r\n\r\n  const loadTransfers = async () => {\r\n    const data = await getTransfers();\r\n    setTransfers(data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await deleteTransfer(id);\r\n    loadTransfers();\r\n  };\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <TextField\r\n        select\r\n        label=\"From Currency\"\r\n        value={fromCurrency}\r\n        onChange={(e) => setFromCurrency(e.target.value)}\r\n        fullWidth\r\n        style={{ marginBottom: \"15px\" }}\r\n      >\r\n        {countries.map((c) => (\r\n          <MenuItem key={c.code} value={c.code}>\r\n            {c.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <TextField\r\n        select\r\n        label=\"To Currency\"\r\n        value={toCurrency}\r\n        onChange={(e) => setToCurrency(e.target.value)}\r\n        fullWidth\r\n        className=\"text-field\"\r\n      >\r\n        {countries.map((c) => (\r\n          <MenuItem key={c.code} value={c.code}>\r\n            {c.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <TextField\r\n        label=\"Amount\"\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        fullWidth\r\n        className=\"text-field\"\r\n      />\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleConvert} className=\"convert-button\">\r\n        Convert\r\n      </Button>\r\n\r\n      {convertedAmount !== null && (\r\n        <Typography variant=\"h6\" className=\"result\">\r\n          Converted Amount: {convertedAmount}\r\n        </Typography>\r\n      )}\r\n\r\n      {transfers.map((t) => (\r\n        <Typography key={t._id} className=\"history\">\r\n          {t.amount} {t.fromCountry} â†’ {t.convertedAmount} {t.toCountry}{\" \"}\r\n          <span className=\"revoke\" onClick={() => handleDelete(t._id)}>\r\n            REVOKE\r\n          </span>\r\n        </Typography>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyConverter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}