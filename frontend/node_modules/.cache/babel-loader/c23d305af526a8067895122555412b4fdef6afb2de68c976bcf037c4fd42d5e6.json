{"ast":null,"code":"const fetchRates = async () => {\n  try {\n    if (!API_KEY) {\n      console.error(\"API Key is missing!\");\n      return;\n    }\n    const response = await axios.get(`https://v6.exchangerate-api.com/v6/${API_KEY}/latest/USD`);\n\n    // Debugging: Log the API response in the console\n    console.log(\"API Response:\", response.data);\n    const rates = response.data.conversion_rates;\n    if (!rates[\"LKR\"]) {\n      console.error(\"LKR rate not found in response!\");\n      return;\n    }\n    const currentTime = new Date().toLocaleTimeString();\n    setChartData(prevData => ({\n      labels: [...prevData.labels.slice(-9), currentTime],\n      datasets: [{\n        ...prevData.datasets[0],\n        data: [...prevData.datasets[0].data.slice(-9), rates[\"LKR\"]]\n      }]\n    }));\n  } catch (error) {\n    console.error(\"Error fetching exchange rates:\", error);\n  }\n};","map":{"version":3,"names":["fetchRates","API_KEY","console","error","response","axios","get","log","data","rates","conversion_rates","currentTime","Date","toLocaleTimeString","setChartData","prevData","labels","slice","datasets"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/components/ExchangeRateChart.js"],"sourcesContent":["const fetchRates = async () => {\r\n  try {\r\n    if (!API_KEY) {\r\n      console.error(\"API Key is missing!\");\r\n      return;\r\n    }\r\n\r\n    const response = await axios.get(`https://v6.exchangerate-api.com/v6/${API_KEY}/latest/USD`);\r\n    \r\n    // Debugging: Log the API response in the console\r\n    console.log(\"API Response:\", response.data);\r\n\r\n    const rates = response.data.conversion_rates;\r\n    \r\n    if (!rates[\"LKR\"]) {\r\n      console.error(\"LKR rate not found in response!\");\r\n      return;\r\n    }\r\n\r\n    const currentTime = new Date().toLocaleTimeString();\r\n\r\n    setChartData((prevData) => ({\r\n      labels: [...prevData.labels.slice(-9), currentTime],\r\n      datasets: [\r\n        {\r\n          ...prevData.datasets[0],\r\n          data: [...prevData.datasets[0].data.slice(-9), rates[\"LKR\"]],\r\n        }\r\n      ]\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"Error fetching exchange rates:\", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,IAAI,CAACC,OAAO,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,sCAAsCL,OAAO,aAAa,CAAC;;IAE5F;IACAC,OAAO,CAACK,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAE3C,MAAMC,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACE,gBAAgB;IAE5C,IAAI,CAACD,KAAK,CAAC,KAAK,CAAC,EAAE;MACjBP,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAChD;IACF;IAEA,MAAMQ,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAEnDC,YAAY,CAAEC,QAAQ,KAAM;MAC1BC,MAAM,EAAE,CAAC,GAAGD,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEN,WAAW,CAAC;MACnDO,QAAQ,EAAE,CACR;QACE,GAAGH,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC;QACvBV,IAAI,EAAE,CAAC,GAAGO,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACV,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,EAAER,KAAK,CAAC,KAAK,CAAC;MAC7D,CAAC;IAEL,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAON,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}