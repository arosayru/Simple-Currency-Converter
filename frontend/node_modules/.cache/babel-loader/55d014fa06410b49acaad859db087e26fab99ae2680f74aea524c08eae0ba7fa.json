{"ast":null,"code":"var _jsxFileName = \"E:\\\\Dev\\\\Assignment\\\\Simple-Currency-Converter\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { convertCurrency, getTransfers, deleteTransfer } from \"./api\";\nimport { Container, TextField, Button, MenuItem, Typography, Card, CardContent } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  label: \"USA\",\n  code: \"USD\"\n}, {\n  label: \"Sri Lanka\",\n  code: \"LKR\"\n}, {\n  label: \"Australia\",\n  code: \"AUD\"\n}, {\n  label: \"India\",\n  code: \"INR\"\n}];\nconst App = () => {\n  _s();\n  const [fromCountry, setFromCountry] = useState(\"USD\");\n  const [toCountry, setToCountry] = useState(\"LKR\");\n  const [amount, setAmount] = useState(\"\");\n  const [convertedAmount, setConvertedAmount] = useState(null);\n  const [transfers, setTransfers] = useState([]);\n  useEffect(() => {\n    loadTransfers();\n  }, []);\n  const loadTransfers = async () => {\n    const data = await getTransfers();\n    setTransfers(data);\n  };\n  const handleConvert = async () => {\n    const data = {\n      fromCountry,\n      toCountry,\n      amount\n    };\n    const result = await convertCurrency(data);\n    setConvertedAmount(result.convertedAmount);\n    loadTransfers();\n  };\n  const handleDelete = async id => {\n    await deleteTransfer(id);\n    loadTransfers();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"From\",\n      value: fromCountry,\n      onChange: e => setFromCountry(e.target.value),\n      fullWidth: true,\n      children: countries.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: c.code,\n        children: c.label\n      }, c.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Amount\",\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleConvert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), convertedAmount !== null && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: [\"Converted Amount: \", convertedAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 42\n    }, this), transfers.map(t => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [t.amount, \" \", t.fromCountry, \" \\u2192 \", t.convertedAmount, \" \", t.toCountry, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(t._id),\n          children: \"Revoke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, t._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"C6TwVA2MC184imTg7/2DszoaGDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","convertCurrency","getTransfers","deleteTransfer","Container","TextField","Button","MenuItem","Typography","Card","CardContent","jsxDEV","_jsxDEV","countries","label","code","App","_s","fromCountry","setFromCountry","toCountry","setToCountry","amount","setAmount","convertedAmount","setConvertedAmount","transfers","setTransfers","loadTransfers","data","handleConvert","result","handleDelete","id","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","select","value","onChange","e","target","fullWidth","map","c","type","onClick","t","_id","_c","$RefreshReg$"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { convertCurrency, getTransfers, deleteTransfer } from \"./api\";\r\nimport { Container, TextField, Button, MenuItem, Typography, Card, CardContent } from \"@mui/material\";\r\n\r\nconst countries = [\r\n    { label: \"USA\", code: \"USD\" },\r\n    { label: \"Sri Lanka\", code: \"LKR\" },\r\n    { label: \"Australia\", code: \"AUD\" },\r\n    { label: \"India\", code: \"INR\" }\r\n];\r\n\r\nconst App = () => {\r\n    const [fromCountry, setFromCountry] = useState(\"USD\");\r\n    const [toCountry, setToCountry] = useState(\"LKR\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [convertedAmount, setConvertedAmount] = useState(null);\r\n    const [transfers, setTransfers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadTransfers();\r\n    }, []);\r\n\r\n    const loadTransfers = async () => {\r\n        const data = await getTransfers();\r\n        setTransfers(data);\r\n    };\r\n\r\n    const handleConvert = async () => {\r\n        const data = { fromCountry, toCountry, amount };\r\n        const result = await convertCurrency(data);\r\n        setConvertedAmount(result.convertedAmount);\r\n        loadTransfers();\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        await deleteTransfer(id);\r\n        loadTransfers();\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Currency Converter</Typography>\r\n            <TextField select label=\"From\" value={fromCountry} onChange={(e) => setFromCountry(e.target.value)} fullWidth>\r\n                {countries.map((c) => <MenuItem key={c.code} value={c.code}>{c.label}</MenuItem>)}\r\n            </TextField>\r\n            <TextField label=\"Amount\" type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} fullWidth />\r\n            <Button variant=\"contained\" onClick={handleConvert}>Convert</Button>\r\n\r\n            {convertedAmount !== null && <Typography variant=\"h5\">Converted Amount: {convertedAmount}</Typography>}\r\n\r\n            {transfers.map((t) => (\r\n                <Card key={t._id}>\r\n                    <CardContent>\r\n                        {t.amount} {t.fromCountry} â†’ {t.convertedAmount} {t.toCountry}\r\n                        <Button onClick={() => handleDelete(t._id)}>Revoke</Button>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}