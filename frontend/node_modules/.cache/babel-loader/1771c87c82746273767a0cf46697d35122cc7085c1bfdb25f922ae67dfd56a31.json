{"ast":null,"code":"var _jsxFileName = \"E:\\\\Dev\\\\Assignment\\\\Simple-Currency-Converter\\\\frontend\\\\src\\\\components\\\\ExchangeRateChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ExchangeRateChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Exchange Rate (USD to LKR)\",\n      data: [],\n      borderColor: \"green\",\n      fill: false\n    }]\n  });\n  useEffect(() => {\n    const fetchRates = async () => {\n      const response = await axios.get(\"https://v6.exchangerate-api.com/v6/YOUR_API_KEY_HERE/latest/USD\");\n      const rates = response.data.conversion_rates;\n      setChartData({\n        labels: Object.keys(rates).slice(0, 10),\n        datasets: [{\n          label: \"Exchange Rate (USD to LKR)\",\n          data: Object.values(rates).slice(0, 10),\n          borderColor: \"green\",\n          fill: false\n        }]\n      });\n    };\n    fetchRates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(ExchangeRateChart, \"wXO/Ze2vD0r2AR1hPj+qnJkxFZA=\");\n_c = ExchangeRateChart;\nexport default ExchangeRateChart;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRateChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","ExchangeRateChart","_s","chartData","setChartData","labels","datasets","label","data","borderColor","fill","fetchRates","response","get","rates","conversion_rates","Object","keys","slice","values","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Dev/Assignment/Simple-Currency-Converter/frontend/src/components/ExchangeRateChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport axios from \"axios\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst ExchangeRateChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Exchange Rate (USD to LKR)\",\r\n        data: [],\r\n        borderColor: \"green\",\r\n        fill: false,\r\n      }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      const response = await axios.get(\"https://v6.exchangerate-api.com/v6/YOUR_API_KEY_HERE/latest/USD\");\r\n      const rates = response.data.conversion_rates;\r\n      setChartData({\r\n        labels: Object.keys(rates).slice(0, 10),\r\n        datasets: [\r\n          {\r\n            label: \"Exchange Rate (USD to LKR)\",\r\n            data: Object.values(rates).slice(0, 10),\r\n            borderColor: \"green\",\r\n            fill: false,\r\n          }\r\n        ]\r\n      });\r\n    };\r\n\r\n    fetchRates();\r\n  }, []);\r\n\r\n  return <Line data={chartData} />;\r\n};\r\n\r\nexport default ExchangeRateChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC1H,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BV,OAAO,CAACW,QAAQ,CAACV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC;IACzCmB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,4BAA4B;MACnCC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,OAAO;MACpBC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACd,MAAM0B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,iEAAiE,CAAC;MACnG,MAAMC,KAAK,GAAGF,QAAQ,CAACJ,IAAI,CAACO,gBAAgB;MAC5CX,YAAY,CAAC;QACXC,MAAM,EAAEW,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QACvCZ,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,4BAA4B;UACnCC,IAAI,EAAEQ,MAAM,CAACG,MAAM,CAACL,KAAK,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;UACvCT,WAAW,EAAE,OAAO;UACpBC,IAAI,EAAE;QACR,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOZ,OAAA,CAACZ,IAAI;IAACqB,IAAI,EAAEL;EAAU;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACrB,EAAA,CAlCID,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAoCvB,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}